// Code generated by mockery v1.0.1 DO NOT EDIT.

package ovsdb

import libovsdb "github.com/socketplane/libovsdb"
import mock "github.com/stretchr/testify/mock"

// mockTransact is an autogenerated mock type for the transact type
type mockTransact struct {
	mock.Mock
}

// Disconnect provides a mock function with given fields:
func (_m *mockTransact) Disconnect() {
	_m.Called()
}

// Transact provides a mock function with given fields: db, operation
func (_m *mockTransact) Transact(db string, operation ...libovsdb.Operation) ([]libovsdb.OperationResult, error) {
	_va := make([]interface{}, len(operation))
	for _i := range operation {
		_va[_i] = operation[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, db)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []libovsdb.OperationResult
	if rf, ok := ret.Get(0).(func(string, ...libovsdb.Operation) []libovsdb.OperationResult); ok {
		r0 = rf(db, operation...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]libovsdb.OperationResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, ...libovsdb.Operation) error); ok {
		r1 = rf(db, operation...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
